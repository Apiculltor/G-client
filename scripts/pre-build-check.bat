@echo off
:: ===================================================================
:: PR√â-BUILD CHECK - VERIFICA√á√ïES ANTES DO DEPLOY REMOTO
:: ===================================================================

echo.
echo ========================================
echo   PR√â-BUILD CHECK - VUZIX BLADE
echo ========================================
echo.

set ERRORS=0

:: Verificar Java/JDK
echo üîç Verificando Java JDK...
java -version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Java JDK n√£o encontrado!
    set /a ERRORS+=1
) else (
    echo ‚úÖ Java JDK OK
)

:: Verificar Gradle
echo üîç Verificando Gradle...
if exist "gradlew.bat" (
    echo ‚úÖ Gradle Wrapper encontrado
) else (
    echo ‚ùå Gradle Wrapper n√£o encontrado!
    set /a ERRORS+=1
)

:: Verificar Android SDK
echo üîç Verificando Android SDK...
adb version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Android SDK/ADB n√£o encontrado!
    set /a ERRORS+=1
) else (
    echo ‚úÖ Android SDK OK
)

:: Verificar estrutura do projeto
echo üîç Verificando estrutura do projeto...
if exist "app\build.gradle" (
    echo ‚úÖ M√≥dulo app encontrado
) else (
    echo ‚ùå M√≥dulo app n√£o encontrado!
    set /a ERRORS+=1
)

if exist "app\src\main\AndroidManifest.xml" (
    echo ‚úÖ AndroidManifest.xml encontrado
) else (
    echo ‚ùå AndroidManifest.xml n√£o encontrado!
    set /a ERRORS+=1
)

:: Verificar depend√™ncias Vuzix
echo üîç Verificando depend√™ncias Vuzix no build.gradle...
findstr /C:"vuzix" app\build.gradle >nul
if %errorlevel% equ 0 (
    echo ‚úÖ Depend√™ncias Vuzix encontradas
) else (
    echo ‚ö†Ô∏è  Depend√™ncias Vuzix n√£o encontradas - verificar manualmente
)

:: Verificar permiss√µes cr√≠ticas
echo üîç Verificando permiss√µes no AndroidManifest...
findstr /C:"CAMERA" app\src\main\AndroidManifest.xml >nul
if %errorlevel% equ 0 (
    echo ‚úÖ Permiss√£o CAMERA encontrada
) else (
    echo ‚ùå Permiss√£o CAMERA n√£o encontrada!
    set /a ERRORS+=1
)

findstr /C:"RECORD_AUDIO" app\src\main\AndroidManifest.xml >nul
if %errorlevel% equ 0 (
    echo ‚úÖ Permiss√£o RECORD_AUDIO encontrada
) else (
    echo ‚ùå Permiss√£o RECORD_AUDIO n√£o encontrada!
    set /a ERRORS+=1
)

:: Verificar espa√ßo em disco
echo üîç Verificando espa√ßo em disco...
for /f "tokens=3" %%a in ('dir /-c %SystemDrive%\ ^| find "bytes free"') do set FREE_SPACE=%%a
if %FREE_SPACE% gtr 1000000000 (
    echo ‚úÖ Espa√ßo em disco suficiente
) else (
    echo ‚ö†Ô∏è  Pouco espa√ßo em disco dispon√≠vel
)

:: Verificar conex√£o de rede (para downloads de depend√™ncias)
echo üîç Verificando conex√£o de rede...
ping -n 1 google.com >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Conex√£o de rede OK
) else (
    echo ‚ö†Ô∏è  Sem conex√£o de rede - builds podem falhar
)

echo.
echo ========================================
echo   RESUMO DA VERIFICA√á√ÉO
echo ========================================

if %ERRORS% equ 0 (
    echo ‚úÖ TUDO OK! Projeto pronto para build e deploy
    echo.
    echo üöÄ Pr√≥ximos passos:
    echo    1. Execute: scripts\build-release.bat
    echo    2. Execute: scripts\deploy-remote.bat
    echo.
) else (
    echo ‚ùå %ERRORS% erro(s) encontrado(s)!
    echo.
    echo üîß Corrija os problemas antes de continuar:
    echo    - Instale componentes faltantes
    echo    - Verifique configura√ß√µes do projeto
    echo    - Configure vari√°veis de ambiente
    echo.
)

echo üìÑ Documenta√ß√£o completa em: README.md
echo.
pause
